# the location of the blocks directory (absolute path or relative to application data dir) (eosio::chain_plugin)
blocks-dir = "blocks"

# Pairs of [BLOCK_NUM,BLOCK_ID] that should be enforced as checkpoints. (eosio::chain_plugin)
# checkpoint =

# Override default WASM runtime (eosio::chain_plugin)
wasm-runtime = eos-vm-jit

# Maximum size (in MB) of the chain state database (eosio::chain_plugin)
chain-state-db-size-mb = 131072
eos-vm-oc-enable = true

# Maximum size (in MB) of the reversible blocks database (eosio::chain_plugin)
# reversible-blocks-db-size-mb = 340

# print contract's output to console (eosio::chain_plugin)
contracts-console = false

# The local IP and port to listen for incoming http connections; set blank to disable. (eosio::http_plugin)
http-server-address = 0.0.0.0:8888

# The local IP and port to listen for incoming https connections; leave blank to disable. (eosio::http_plugin)
https-server-address =

# HTTP Alias
http-alias = localhost:8888
http-alias = 127.0.0.1:8888

http-validate-host = false

http-threads = 32

# Filename with the certificate chain to present on https connections. PEM format. Required for https. (eosio::http_plugin)
# https-certificate-chain-file =

abi-serializer-max-time-ms = 150000
validation-mode = light
chain-threads = 4

# Filename with https private key in PEM format. Required for https (eosio::http_plugin)
# https-private-key-file =

# Specify the Access-Control-Allow-Origin to be returned on each request. (eosio::http_plugin)
# access-control-allow-origin =

# Specify the Access-Control-Allow-Headers to be returned on each request. (eosio::http_plugin)
# access-control-allow-headers =

# Specify if Access-Control-Allow-Credentials: true should be returned on each request. (eosio::http_plugin)
access-control-allow-credentials = false

# The actual host:port used to listen for incoming p2p connections. (eosio::net_plugin)
p2p-listen-endpoint = 0.0.0.0:9876

# An externally accessible host:port for identifying this node. Defaults to p2p-listen-endpoint. (eosio::net_plugin)
# p2p-server-address =

# The public endpoint of a peer node to connect to. Use multiple p2p-peer-address options as needed to compose a network. (eosio::net_plugin)

p2p-peer-address = p2p.wax.eoseoul.io:29876
p2p-peer-address = wax-p2p.eosdac.io:29876
p2p-peer-address = peer.wax.alohaeos.com:9876
p2p-peer-address = wax.cryptolions.io:9876
p2p-peer-address = peer2-wax.eosphere.io:9876
p2p-peer-address = seed1-wax-mainnet.wecan.dev:14998
p2p-peer-address = waxp2p.sentnl.io:9876
p2p-peer-address = p2p.wax.eosdetroit.io:1337
p2p-peer-address = peer1.wax.pink.gg:36715
p2p-peer-address = wax-peer-us.blokcrafters.io:9876
p2p-peer-address = p2p.wax.bountyblok.io:29876
p2p-peer-address = p2p1.wax.greeneosio.com:9876
p2p-peer-address = wax-seed.eosiomadrid.io:9876
p2p-peer-address = peer1-emea.wax.blacklusion.io:4646
p2p-peer-address = wax.seed.eosnation.io:9876
p2p-peer-address = wax.eu.eosamsterdam.net:9101
p2p-peer-address = peer.tokengamer.io:9876
p2p-peer-address = waxp2p.ledgerwise.io:21877
p2p-peer-address = p2p.niftylife.io:9876
p2p-peer-address = wax.greymass.com:35777
p2p-peer-address = p2p-node1.neftyblocks.com:9876
p2p-peer-address = wax.p2p.eosdublin.io:9876
p2p-peer-address = p2p-node2.neftyblocks.com:9876
p2p-peer-address = query.3dkrender.com:9880
p2p-peer-address = peer.3dkrender.com:9880
p2p-peer-address = peer1.wax.blacklusion.io:4646
p2p-peer-address = peer1.hivebp.io:9876
p2p-peer-address = wax.eosusa.news:9879
p2p-peer-address = wax.seed.eosnation.io:9876
p2p-peer-address = wax-p2p.hkeos.com:19876

# Maximum number of client nodes from any single IP address
p2p-max-nodes-per-host = 1

# The name supplied to identify this node amongst the peers. (eosio::net_plugin)
agent-name = "WAX Agent"

# Can be 'any' or 'producers' or 'specified' or 'none'. If 'specified', peer-key must be specified at least once. If only 'producers', peer-key is not required. 'producers' and 'specified' may be combined. (eosio::net_plugin)
# allowed-connection = any

# Optional public key of peer allowed to connect.  May be used multiple times. (eosio::net_plugin)
# peer-key =

# Tuple of [PublicKey, WIF private key] (may specify multiple times) (eosio::net_plugin)
# peer-private-key =

# Maximum number of clients from which connections are accepted, use 0 for no limit (eosio::net_plugin)
# max-clients = 25

# number of seconds to wait before cleaning up dead connections (eosio::net_plugin)
# connection-cleanup-period = 30

# True to require exact match of peer network version. (eosio::net_plugin)
# network-version-match = 0

# number of blocks to retrieve in a chunk from any individual peer during synchronization (eosio::net_plugin)
sync-fetch-span = 100

# Enable block production, even if the chain is stale. (eosio::producer_plugin)
# enable-stale-production = false

# Start this node in a state where production is paused (eosio::producer_plugin)
pause-on-startup = false

# Limits the maximum time (in milliseconds) that is allowed a pushed transaction's code to execute before being considered invalid (eosio::producer_plugin)
max-transaction-time = 1000

# Limits the maximum age (in seconds) of the DPOS Irreversible Block for a chain this node will produce blocks on (eosio::producer_plugin)
# max-irreversible-block-age = 1800

# ID of producer controlled by this node (e.g. inita; may specify multiple times) (eosio::producer_plugin)
# producer-name = waxproducer

# Tuple of [public key, WIF private key] (may specify multiple times) (eosio::producer_plugin)
# signature-provider =

# Lag in number of blocks from the head block when selecting the reference block for transactions (-1 means Last Irreversible Block) (eosio::txn_test_gen_plugin)
# txn-reference-block-lag = 0

# eosio key that will be imported automatically when a wallet is created. (eosio::wallet_plugin)
# eosio-key =

# Plugin(s) to enable, may be specified multiple times
# plugin = eosio::producer_plugin
plugin = eosio::chain_api_plugin
plugin = eosio::http_plugin
plugin = eosio::net_api_plugin
